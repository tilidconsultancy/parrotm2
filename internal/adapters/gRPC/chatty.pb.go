// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.21.12
// source: proto/chatty.proto

package gRPC

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AudioFormat int32

const (
	AudioFormat_MP3      AudioFormat = 0
	AudioFormat_OGG_OPUS AudioFormat = 1
	AudioFormat_FLAC     AudioFormat = 2
	AudioFormat_ALAW     AudioFormat = 3
	AudioFormat_MULAW    AudioFormat = 4
	AudioFormat_AMRNB    AudioFormat = 5
	AudioFormat_AMRWB    AudioFormat = 6
	AudioFormat_ANY      AudioFormat = 7
)

// Enum value maps for AudioFormat.
var (
	AudioFormat_name = map[int32]string{
		0: "MP3",
		1: "OGG_OPUS",
		2: "FLAC",
		3: "ALAW",
		4: "MULAW",
		5: "AMRNB",
		6: "AMRWB",
		7: "ANY",
	}
	AudioFormat_value = map[string]int32{
		"MP3":      0,
		"OGG_OPUS": 1,
		"FLAC":     2,
		"ALAW":     3,
		"MULAW":    4,
		"AMRNB":    5,
		"AMRWB":    6,
		"ANY":      7,
	}
)

func (x AudioFormat) Enum() *AudioFormat {
	p := new(AudioFormat)
	*p = x
	return p
}

func (x AudioFormat) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AudioFormat) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_chatty_proto_enumTypes[0].Descriptor()
}

func (AudioFormat) Type() protoreflect.EnumType {
	return &file_proto_chatty_proto_enumTypes[0]
}

func (x AudioFormat) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AudioFormat.Descriptor instead.
func (AudioFormat) EnumDescriptor() ([]byte, []int) {
	return file_proto_chatty_proto_rawDescGZIP(), []int{0}
}

type TextToSpeechRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Voice        string      `protobuf:"bytes,1,opt,name=voice,proto3" json:"voice,omitempty"`
	Content      string      `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
	OutputFormat AudioFormat `protobuf:"varint,3,opt,name=outputFormat,proto3,enum=chatty.proto.AudioFormat" json:"outputFormat,omitempty"`
}

func (x *TextToSpeechRequest) Reset() {
	*x = TextToSpeechRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_chatty_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TextToSpeechRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TextToSpeechRequest) ProtoMessage() {}

func (x *TextToSpeechRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chatty_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TextToSpeechRequest.ProtoReflect.Descriptor instead.
func (*TextToSpeechRequest) Descriptor() ([]byte, []int) {
	return file_proto_chatty_proto_rawDescGZIP(), []int{0}
}

func (x *TextToSpeechRequest) GetVoice() string {
	if x != nil {
		return x.Voice
	}
	return ""
}

func (x *TextToSpeechRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *TextToSpeechRequest) GetOutputFormat() AudioFormat {
	if x != nil {
		return x.OutputFormat
	}
	return AudioFormat_MP3
}

type AudioBuffer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Chunk []byte `protobuf:"bytes,1,opt,name=chunk,proto3" json:"chunk,omitempty"`
	Size  int32  `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
}

func (x *AudioBuffer) Reset() {
	*x = AudioBuffer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_chatty_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AudioBuffer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AudioBuffer) ProtoMessage() {}

func (x *AudioBuffer) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chatty_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AudioBuffer.ProtoReflect.Descriptor instead.
func (*AudioBuffer) Descriptor() ([]byte, []int) {
	return file_proto_chatty_proto_rawDescGZIP(), []int{1}
}

func (x *AudioBuffer) GetChunk() []byte {
	if x != nil {
		return x.Chunk
	}
	return nil
}

func (x *AudioBuffer) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

type SpeechToTextRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Payload:
	//	*SpeechToTextRequest_InputFormat
	//	*SpeechToTextRequest_ChunkData
	Payload isSpeechToTextRequest_Payload `protobuf_oneof:"payload"`
}

func (x *SpeechToTextRequest) Reset() {
	*x = SpeechToTextRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_chatty_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpeechToTextRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpeechToTextRequest) ProtoMessage() {}

func (x *SpeechToTextRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chatty_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpeechToTextRequest.ProtoReflect.Descriptor instead.
func (*SpeechToTextRequest) Descriptor() ([]byte, []int) {
	return file_proto_chatty_proto_rawDescGZIP(), []int{2}
}

func (m *SpeechToTextRequest) GetPayload() isSpeechToTextRequest_Payload {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (x *SpeechToTextRequest) GetInputFormat() AudioFormat {
	if x, ok := x.GetPayload().(*SpeechToTextRequest_InputFormat); ok {
		return x.InputFormat
	}
	return AudioFormat_MP3
}

func (x *SpeechToTextRequest) GetChunkData() *AudioBuffer {
	if x, ok := x.GetPayload().(*SpeechToTextRequest_ChunkData); ok {
		return x.ChunkData
	}
	return nil
}

type isSpeechToTextRequest_Payload interface {
	isSpeechToTextRequest_Payload()
}

type SpeechToTextRequest_InputFormat struct {
	InputFormat AudioFormat `protobuf:"varint,1,opt,name=inputFormat,proto3,enum=chatty.proto.AudioFormat,oneof"`
}

type SpeechToTextRequest_ChunkData struct {
	ChunkData *AudioBuffer `protobuf:"bytes,2,opt,name=chunkData,proto3,oneof"`
}

func (*SpeechToTextRequest_InputFormat) isSpeechToTextRequest_Payload() {}

func (*SpeechToTextRequest_ChunkData) isSpeechToTextRequest_Payload() {}

type SpeechToTextResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Payload:
	//	*SpeechToTextResponse_Content
	//	*SpeechToTextResponse_Size
	Payload isSpeechToTextResponse_Payload `protobuf_oneof:"payload"`
}

func (x *SpeechToTextResponse) Reset() {
	*x = SpeechToTextResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_chatty_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpeechToTextResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpeechToTextResponse) ProtoMessage() {}

func (x *SpeechToTextResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chatty_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpeechToTextResponse.ProtoReflect.Descriptor instead.
func (*SpeechToTextResponse) Descriptor() ([]byte, []int) {
	return file_proto_chatty_proto_rawDescGZIP(), []int{3}
}

func (m *SpeechToTextResponse) GetPayload() isSpeechToTextResponse_Payload {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (x *SpeechToTextResponse) GetContent() string {
	if x, ok := x.GetPayload().(*SpeechToTextResponse_Content); ok {
		return x.Content
	}
	return ""
}

func (x *SpeechToTextResponse) GetSize() int32 {
	if x, ok := x.GetPayload().(*SpeechToTextResponse_Size); ok {
		return x.Size
	}
	return 0
}

type isSpeechToTextResponse_Payload interface {
	isSpeechToTextResponse_Payload()
}

type SpeechToTextResponse_Content struct {
	Content string `protobuf:"bytes,1,opt,name=content,proto3,oneof"`
}

type SpeechToTextResponse_Size struct {
	Size int32 `protobuf:"varint,2,opt,name=size,proto3,oneof"`
}

func (*SpeechToTextResponse_Content) isSpeechToTextResponse_Payload() {}

func (*SpeechToTextResponse_Size) isSpeechToTextResponse_Payload() {}

var File_proto_chatty_proto protoreflect.FileDescriptor

var file_proto_chatty_proto_rawDesc = []byte{
	0x0a, 0x12, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x68, 0x61, 0x74, 0x74, 0x79, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x63, 0x68, 0x61, 0x74, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x84, 0x01, 0x0a, 0x13, 0x54, 0x65, 0x78, 0x74, 0x54, 0x6f, 0x53, 0x70, 0x65,
	0x65, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x6f,
	0x69, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x6f, 0x69, 0x63, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x3d, 0x0a, 0x0c, 0x6f, 0x75,
	0x74, 0x70, 0x75, 0x74, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x19, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x41, 0x75, 0x64, 0x69, 0x6f, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x52, 0x0c, 0x6f, 0x75, 0x74,
	0x70, 0x75, 0x74, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x22, 0x37, 0x0a, 0x0b, 0x41, 0x75, 0x64,
	0x69, 0x6f, 0x42, 0x75, 0x66, 0x66, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x68, 0x75, 0x6e,
	0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x12, 0x12,
	0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x69,
	0x7a, 0x65, 0x22, 0x9a, 0x01, 0x0a, 0x13, 0x53, 0x70, 0x65, 0x65, 0x63, 0x68, 0x54, 0x6f, 0x54,
	0x65, 0x78, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3d, 0x0a, 0x0b, 0x69, 0x6e,
	0x70, 0x75, 0x74, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x19, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41,
	0x75, 0x64, 0x69, 0x6f, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x48, 0x00, 0x52, 0x0b, 0x69, 0x6e,
	0x70, 0x75, 0x74, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x39, 0x0a, 0x09, 0x63, 0x68, 0x75,
	0x6e, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63,
	0x68, 0x61, 0x74, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x75, 0x64, 0x69,
	0x6f, 0x42, 0x75, 0x66, 0x66, 0x65, 0x72, 0x48, 0x00, 0x52, 0x09, 0x63, 0x68, 0x75, 0x6e, 0x6b,
	0x44, 0x61, 0x74, 0x61, 0x42, 0x09, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22,
	0x53, 0x0a, 0x14, 0x53, 0x70, 0x65, 0x65, 0x63, 0x68, 0x54, 0x6f, 0x54, 0x65, 0x78, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x48, 0x00, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x42, 0x09, 0x0a, 0x07, 0x70, 0x61, 0x79,
	0x6c, 0x6f, 0x61, 0x64, 0x2a, 0x62, 0x0a, 0x0b, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x46, 0x6f, 0x72,
	0x6d, 0x61, 0x74, 0x12, 0x07, 0x0a, 0x03, 0x4d, 0x50, 0x33, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08,
	0x4f, 0x47, 0x47, 0x5f, 0x4f, 0x50, 0x55, 0x53, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x46, 0x4c,
	0x41, 0x43, 0x10, 0x02, 0x12, 0x08, 0x0a, 0x04, 0x41, 0x4c, 0x41, 0x57, 0x10, 0x03, 0x12, 0x09,
	0x0a, 0x05, 0x4d, 0x55, 0x4c, 0x41, 0x57, 0x10, 0x04, 0x12, 0x09, 0x0a, 0x05, 0x41, 0x4d, 0x52,
	0x4e, 0x42, 0x10, 0x05, 0x12, 0x09, 0x0a, 0x05, 0x41, 0x4d, 0x52, 0x57, 0x42, 0x10, 0x06, 0x12,
	0x07, 0x0a, 0x03, 0x41, 0x4e, 0x59, 0x10, 0x07, 0x32, 0xc0, 0x01, 0x0a, 0x13, 0x53, 0x70, 0x65,
	0x65, 0x63, 0x68, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x12, 0x4e, 0x0a, 0x0c, 0x54, 0x65, 0x78, 0x74, 0x54, 0x6f, 0x53, 0x70, 0x65, 0x65, 0x63, 0x68,
	0x12, 0x21, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x54, 0x65, 0x78, 0x74, 0x54, 0x6f, 0x53, 0x70, 0x65, 0x65, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x42, 0x75, 0x66, 0x66, 0x65, 0x72, 0x30, 0x01,
	0x12, 0x59, 0x0a, 0x0c, 0x53, 0x70, 0x65, 0x65, 0x63, 0x68, 0x54, 0x6f, 0x54, 0x65, 0x78, 0x74,
	0x12, 0x21, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x53, 0x70, 0x65, 0x65, 0x63, 0x68, 0x54, 0x6f, 0x54, 0x65, 0x78, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x53, 0x70, 0x65, 0x65, 0x63, 0x68, 0x54, 0x6f, 0x54, 0x65, 0x78, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x28, 0x01, 0x30, 0x01, 0x42, 0x18, 0x5a, 0x16, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x61, 0x64, 0x61, 0x70, 0x74, 0x65, 0x72, 0x73,
	0x2f, 0x67, 0x52, 0x50, 0x43, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_chatty_proto_rawDescOnce sync.Once
	file_proto_chatty_proto_rawDescData = file_proto_chatty_proto_rawDesc
)

func file_proto_chatty_proto_rawDescGZIP() []byte {
	file_proto_chatty_proto_rawDescOnce.Do(func() {
		file_proto_chatty_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_chatty_proto_rawDescData)
	})
	return file_proto_chatty_proto_rawDescData
}

var file_proto_chatty_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_proto_chatty_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_proto_chatty_proto_goTypes = []interface{}{
	(AudioFormat)(0),             // 0: chatty.proto.AudioFormat
	(*TextToSpeechRequest)(nil),  // 1: chatty.proto.TextToSpeechRequest
	(*AudioBuffer)(nil),          // 2: chatty.proto.AudioBuffer
	(*SpeechToTextRequest)(nil),  // 3: chatty.proto.SpeechToTextRequest
	(*SpeechToTextResponse)(nil), // 4: chatty.proto.SpeechToTextResponse
}
var file_proto_chatty_proto_depIdxs = []int32{
	0, // 0: chatty.proto.TextToSpeechRequest.outputFormat:type_name -> chatty.proto.AudioFormat
	0, // 1: chatty.proto.SpeechToTextRequest.inputFormat:type_name -> chatty.proto.AudioFormat
	2, // 2: chatty.proto.SpeechToTextRequest.chunkData:type_name -> chatty.proto.AudioBuffer
	1, // 3: chatty.proto.SpeechServiceStream.TextToSpeech:input_type -> chatty.proto.TextToSpeechRequest
	3, // 4: chatty.proto.SpeechServiceStream.SpeechToText:input_type -> chatty.proto.SpeechToTextRequest
	2, // 5: chatty.proto.SpeechServiceStream.TextToSpeech:output_type -> chatty.proto.AudioBuffer
	4, // 6: chatty.proto.SpeechServiceStream.SpeechToText:output_type -> chatty.proto.SpeechToTextResponse
	5, // [5:7] is the sub-list for method output_type
	3, // [3:5] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_proto_chatty_proto_init() }
func file_proto_chatty_proto_init() {
	if File_proto_chatty_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_chatty_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TextToSpeechRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_chatty_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AudioBuffer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_chatty_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpeechToTextRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_chatty_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpeechToTextResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_proto_chatty_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*SpeechToTextRequest_InputFormat)(nil),
		(*SpeechToTextRequest_ChunkData)(nil),
	}
	file_proto_chatty_proto_msgTypes[3].OneofWrappers = []interface{}{
		(*SpeechToTextResponse_Content)(nil),
		(*SpeechToTextResponse_Size)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_chatty_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_chatty_proto_goTypes,
		DependencyIndexes: file_proto_chatty_proto_depIdxs,
		EnumInfos:         file_proto_chatty_proto_enumTypes,
		MessageInfos:      file_proto_chatty_proto_msgTypes,
	}.Build()
	File_proto_chatty_proto = out.File
	file_proto_chatty_proto_rawDesc = nil
	file_proto_chatty_proto_goTypes = nil
	file_proto_chatty_proto_depIdxs = nil
}
